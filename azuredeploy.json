{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "siteName": {
      "type": "string"
    },
    "hostingPlanName": {
      "type": "string"
    },
    "siteLocation": {
      "type": "string"
    },
    "sku": {
      "type": "string",
      "allowedValues": [
        "Free",
        "Shared",
        "Basic",
        "Standard"
      ],
      "defaultValue": "Free"
    },
    "workerSize": {
      "type": "string",
      "allowedValues": [
        "0",
        "1",
        "2"
      ],
      "defaultValue": "0"
    },
    "someAppSetting": {
      "type": "string",
      "defaultValue": "Test App Setting Value"
    },
    "repoUrl": {
      "type": "string"
    },
    "branch": {
      "type": "string"
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    }
  },
  "variables": {
    "apiVersion": "2015-06-15",
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'standardsa')]",
    "webSitePubCreds": "[resourceId('Microsoft.Web/sites/config', parameters('siteName'), 'publishingCredentials')]",
    "jobCollectionName":  "testcol"
  },
  "resources": [
    {
      "apiVersion": "2014-06-01",
      "name": "[parameters('hostingPlanName')]",
      "type": "Microsoft.Web/serverFarms",
      "location": "[parameters('siteLocation')]",
      "properties": {
        "name": "[parameters('hostingPlanName')]",
        "sku": "[parameters('sku')]",
        "workerSize": "[parameters('workerSize')]",
        "numberOfWorkers": 1
      }
    },
    {
      "apiVersion": "2014-06-01",
      "name": "[parameters('siteName')]",
      "type": "Microsoft.Web/Sites",
      "location": "[parameters('siteLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Web/serverFarms/', parameters('hostingPlanName'))]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "empty"
      },
      "properties": {
        "name": "[parameters('siteName')]",
        "serverFarm": "[parameters('hostingPlanName')]"
      },
      "resources": [
        {
          "apiVersion": "2014-04-01",
          "type": "config",
          "name": "web",
          "dependsOn": [
            "[concat('Microsoft.Web/Sites/', parameters('siteName'))]"
          ],
          "properties": {
            "appSettings": [
              {
                "name": "someAppSetting",
                "value": "[parameters('someAppSetting')]"
              }
            ]
          }
        },
        {
          "apiVersion": "2014-04-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('siteName'))]",
            "[concat('Microsoft.Web/Sites/', parameters('siteName'), '/config/web')]"
          ],
          "properties": {
            "RepoUrl": "[parameters('repoUrl')]",
            "branch": "[parameters('branch')]",
            "IsManualIntegration": true
          }
        },
        {
          "apiVersion": "[variables('apiVersion')]",
          "location": "[parameters('siteLocation')]",
          "name": "[variables('storageAccountName')]",
          "properties": {
            "accountType": "[parameters('storageAccountType')]"
          },
          "type": "Microsoft.Storage/storageAccounts",
          "dependsOn": [
            "[concat('Microsoft.Web/Sites/', parameters('siteName'))]"
          ]
        },
        {
          "apiVersion": "2014-08-01-preview",
          "name": "[variables('jobCollectionName')]",
          "type": "Microsoft.Scheduler/jobCollections",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('siteName'))]"
          ],
          "location": "[parameters('siteLocation')]",
          "properties": {
            "sku": {
              "name": "standard"
            },
            "quota": {
              "maxJobCount": "10",
              "maxRecurrence": {
                "Frequency": "minute",
                "interval": "1"
              }
            }
          },
          "resources": [
            {
              "apiVersion": "2014-08-01-preview",
              "name": "WebJobTest",
              "type": "jobs",
              "dependsOn": [
                "[resourceId('Microsoft.Scheduler/jobCollections', variables('jobCollectionName'))]"
              ],
              "properties": {
                "startTime": "2015-02-10T00:08:00Z",
                "action": {
                  "request": {
                    "uri": "[concat('https://',reference(resourceId('Microsoft.Web/Sites',parameters('siteName'))).enabledHostNames[1],'/api/triggeredjobs/WebJobTest/run')]",
                    "method": "POST",
                    "authentication": {
                      "type": "Basic",
                      "username": "[list(variables('webSitePubCreds'), '2014-11-01').properties.publishingUserName]",
                      "password": "[list(variables('webSitePubCreds'), '2014-11-01').properties.publishingPassword]"
                    }
                  },
                  "type": "http",
                  "retryPolicy": {
                    "retryType": "Fixed",
                    "retryInterval": "PT1M",
                    "retryCount": 2
                  }
                },
                "state": "enabled",
                "recurrence": {
                  "frequency": "minute",
                  "interval": 1
                }
              }
            }
          ]
        }
      ]
    }
  ]
} 
